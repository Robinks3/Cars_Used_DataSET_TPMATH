"""27/05/2024BELLONCLE Robin - BOTHUA Pierre                                        Projet Base de Données                                        Mathématiques statistique                                        """import pandas as pdimport numpy as npimport seaborn as snsimport statsmodels.api as smimport matplotlib.pyplot as pltimport scipy.stats as statsimport matplotlib.pyplot as pltimport seaborn as snsfrom scipy import statsimport statsmodels.api as smfrom statsmodels.formula.api import olsfrom sklearn.decomposition import PCA# Charger le fichier CSVfile_path = 'UserCarData.csv'Data = pd.read_csv(file_path, sep=',')Data.columns = [col.strip() for col in Data.columns]  # Supprimer les espaces autour des noms de colonnes# Sélectionner des colonnes pour l'analysecolumns = ["year", "selling_price", "km_driven", "mileage", "engine", "max_power", "seats"]year_data, selling_price_data, km_driven_data, mileage_data, engine_data, max_power_data, seats_data = [Data[col] for col in columns]"""# Afficher les premières lignes pour vérifier le chargementprint(Data.head())# Relation entre le prix de vente et les kilomètres parcourusplt.figure(figsize=(10, 6))sns.scatterplot(x=km_driven_data, y=selling_price_data)plt.xlabel('Kilomètres parcourus')plt.ylabel('Prix de vente')plt.title('Relation entre le prix de vente et les kilomètres parcourus')plt.show()# Matrice de corrélationcorrelation_matrix = Data[['selling_price', 'km_driven', 'year', 'mileage', 'max_power']].corr()# Affichage de la matrice de corrélation dans la consoleprint(correlation_matrix)# Création de la heatmap avec les valeurs de corrélation affichées dans toutes les casesplt.figure(figsize=(10, 8))# Utilisation de mask pour masquer uniquement les valeurs de la diagonale principale si désirémask = np.zeros_like(correlation_matrix)sns.heatmap(correlation_matrix, mask=mask, annot=True, fmt=".2f", cmap='coolwarm', cbar=True, square=True, linewidths=.5)plt.title('Matrice de Corrélation')plt.show()"""#Regression linéaire multipleX = sm.add_constant(Data[['year_data','km_driven_data', 'max_power_data',]])model = sm.OLS(Data['selling_price_data'], X).fit()print(model.summary())